version: '3'

services:

  school-api:
    container_name: school-api
    image: local/api:0.0.1-SNAPSHOT
    ports:
      - "27017:27017"
    volumes:
      - api-logs:/var/log/spring
    environment:
      SERVER_PORT: 27017
      SPRING_PROFILES_ACTIVE: docker
      TZ: Europe/Warsaw
    depends_on:
      - postgres
    networks:
      - logging
      - postgres
    restart: unless-stopped

  postgres:
    image: postgres:13
    container_name: school-postgres
    ports:
      - "3309:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/db-init.sql:/docker-entrypoint-initdb.d/db-init.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: dontgotosql
      PGDATA: /data/postgres
      TZ: Europe/Warsaw
    networks:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1m
      timeout: 10s
      retries: 5
    restart: unless-stopped

  pgadmin:
    container_name: school-pgadmin
    image: dpage/pgadmin4
    environment:
      TZ: Europe/Warsaw
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./db/servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.48.0
    volumes:
      - ./logging_infrastructure/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - logging
    ports:
      - "9090:9090"
    restart: unless-stopped
    environment:
      TZ: Europe/Warsaw

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secret

    volumes:
      - grafana-data:/var/lib/grafana
      - ./logging_infrastructure/grafana/dashboards:/var/lib/grafana/dashboards
      - ./logging_infrastructure/grafana/datasources-config.yml:/etc/grafana/provisioning/datasources/main.yml
      - ./logging_infrastructure/grafana/dashboard-config.yml:/etc/grafana/provisioning/dashboards/main.yml
    depends_on:
      - prometheus
      - loki
    ports:
      - "3000:3000"
    networks:
      - logging
    restart: unless-stopped

  loki:
    container_name: loki
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - logging
    restart: unless-stopped
    environment:
      TZ: Europe/Warsaw

  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    volumes:
      - api-logs:/var/log/spring
      - ./logging_infrastructure/promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - logging
    restart: unless-stopped
    environment:
      TZ: Europe/Warsaw

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - logging
    restart: unless-stopped


volumes:
  api-logs:
    driver: local
    driver_opts:
      type: none
      device: ./logging_infrastructure/api-logs
      o: bind
  postgres-data:
  pgadmin-data:
  grafana-data:

networks:
  logging:
    driver: bridge
  postgres:
    driver: bridge

